import argparse

class ParseProxy:
	def set_args(self):
		parser = argparse.ArgumentParser(description='««Proxychains parser»»')
		parser.add_argument('-f','--file',help='definy the target file to parse',required=True)
		args = parser.parse_args()
		return args

	def parse_proxy(self,args):
		action_list=[]
		status_list=[]
		ip_list=[]
		port_list=[]
		with open(args.file,'r') as file:
			string = file.read()
		new_file = args.file.split('.com')[0]
		with open(new_file,'w') as file: file.write('')
		with open(new_file, 'a') as file:
			list_of_ips = string.split('\n')
			for lines in list_of_ips:
				try:
					list = lines.split('-<><>-')
					ip_port = list[1]
					ip = ip_port.split(':')[0]
					port = ip_port.split(':')[1]
					status = list[2]
					action = list[0].split('-<>-')[0]
					action_list.append(action)
					status_list.append(status)
					ip_list.append(ip)
					port_list.append(port)
					file.write(f'ip:\t{ip_list}\n')
					file.write(f'port:\t{port_list}\n')
					file.write(f'action:\t{action_list}\n')
					file.write(f'status:\t{status_list}\n')
					file.write(f'\n')
				except:
					pass
			return action_list, ip_list, port_list, status_list

	def main(self):
		args = self.set_args()
		if args.file:
			action_list,ip_list,port_list,status_list = self.parse_proxy(args)
			for ip in ip_list:
				print(f'{ip}\n')
if __name__ == '__main__':
	PP = ParseProxy()
	PP.main()
