#!/bin/python3
import json
import subprocess
import argparse
import shlex

def arguments():
	parser = argparse.ArgumentParser(
		description="""
««EXTRACT IP»»
""",
		formatter_class=argparse.RawDescriptionHelpFormatter)
	parser.add_argument('-f', '--file',required=True,help='spicify file within URLs or links')
	parser.add_argument('-v', '--verbose',action='store_true',help='verbose mode')
	parser.add_argument('-d','--data',action='store_true',help='finda data about the file of URLs')
	args = parser.parse_args()
	return args

def get_data(url):
	comando = f"curl -v {url}"
	args = shlex.split(comando)
	resultado = subprocess.run(args, capture_output=True, text=True)
	return resultado, resultado.stdout, resultado.stderr

def main():
	args = arguments()
	with open(args.file, 'r') as file:
		listURL = file.read()
	listURL = listURL.split("\n")
	listIP= {}
	with open(f'IPs of url', "w") as file:
		for url in listURL:
			try:
				resultado, saida, error = get_data(url)
				resultado1 = str(resultado).split("Connected to ")[1]
				resultado1 = resultado1.split("port")[0]
				resultado1 = resultado1.split("(")[1]
				ip = str(resultado1.split(")")[0])
				file.write(f'url: {url}\tip:{ip}\n')
				if args.data:
					cmd = f'geolocalization -t {ip}'
					argumento = shlex.split(cmd)
					data = subprocess.run(argumento, capture_output=True, text=True)
					print(data)
				elif args.verbose:
					print(f'url: {url}\tip:{ip}\n')
			except Exception as erro:
				with open(f'IP of url.log', "w") as file:
					file.write(f'url: {url}\terro:{erro}\n')
					if args.verbose:
						print(f'url: {url}\terro:{erro}\n')
				resultado, saida, error = get_data(url)
				resultado2 = str(resultado).split("IPv4: ")[1]
				resultado2 = resultado2.split("\n")[0]
				resultado2 = resultado2.split(", ")
				if args.data:
					for ip in resultado2:
						cmd = f'geolocalization -t {ip}'
						argumento = shlex.split(cmd)
						data = subprocess.run(argumento, capture_output=True, text=True)
						print(data)
				file.write(f'url: {url}\tip:{ip}\n')
				continue
if __name__=="__main__":main();

